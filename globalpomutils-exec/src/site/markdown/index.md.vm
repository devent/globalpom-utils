#*
 * Copyright ${project.custom.year} Erwin Müller <erwin.mueller@anrisoftware.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
[![Build Status]($context.get("project.custom.jenkins.build.badge.master"))]($context.get("project.custom.jenkins.build.link.master"))
[![Quality Gate]($context.get("project.custom.sonarqube.qualitygate.badge"))]($context.get("project.custom.sonarqube.qualitygate.link"))
[![Apache License, Version 2.0]($context.get("project.custom.license.image.url"))](http://www.apache.org/licenses/LICENSE-2.0) © $context.get("project.custom.year") $context.get("project.custom.user.name")

#[[#]]# Description

${project.description}

* Api

The public application interface, containing the interfaces for the
command execution, command line, command output;

* Command

Implements the command line;

* Core

Implements the command execution;

* Logoutputs

Implements command outputs that redirects the standard outputs to the
info, debug and error logger;

* Pipeoutputs

Implements command outputs that pipes the standard outputs into a sink;

* Runcommands

Implements a collection of run commands for debug purposes;

* Script

Implements a command execution that creates the command from a template
resource;

* Scriptprocess

Implements a command execution that creates the command from a template
resource;

* Runcommands

Logs and saves the run commands in a collection. The logger can be configured
to log the executed commands in a separate log file. The logger can be
configured at runtime:

<pre>
/**
 * Attach the logger for RunCommands commands collection. The commands
 * are logged into the file {@code "&lt;prefix>/runcommands.log"}
 */
static attachRunCommandsLog(File prefix) {
    LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();
    def fileAppender = new FileAppender();
    fileAppender.context =loggerContext
    fileAppender.name ="RUN-COMMANDS-FILE"
    fileAppender.append = false
    fileAppender.file = "$prefix/runcommands.log"

    def encoder = new PatternLayoutEncoder();
    encoder.context = loggerContext
    encoder.pattern = "%-4relative [%thread] %-5level %logger{0} - %msg%n%r"
    encoder.start();

    fileAppender.encoder = encoder
    fileAppender.start();

    // attach the rolling file appender to the logger of your choice
    Logger logbackLogger = loggerContext.getLogger "com.anrisoftware.globalpom.exec.runcommands.RunCommands"
    logbackLogger.addAppender(fileAppender);
}
</pre>

Or it can be configured via the logback.xml file:

<pre>
&lt;configuration>

    &lt;appender name="RUNCOMMANDS-FILE" class="ch.qos.logback.core.FileAppender">
        &lt;file>${project.custom.log.prefix}/${project.custom.app.path}-runcommands.log&lt;/file>
        &lt;append>false&lt;/append>
        &lt;rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            &lt;fileNamePattern>${project.custom.log.prefix}/${project.custom.app.path}-runcommands.%d{yyyy-MM-dd}.%i.log&lt;/fileNamePattern>
            &lt;timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                &lt;maxFileSize>1MB&lt;/maxFileSize>
            &lt;/timeBasedFileNamingAndTriggeringPolicy>
            &lt;maxHistory>10&lt;/maxHistory>
        &lt;/rollingPolicy>
        &lt;encoder>
            &lt;pattern>[%level] %date{ISO8601} [%thread] %logger - %msg %n%xEx&lt;/pattern>
            &lt;immediateFlush>true&lt;/immediateFlush>
        &lt;/encoder>
    &lt;/appender>

    &lt;root level="ALL">
        &lt;appender-ref ref="LOG-FILE" />
    &lt;/root>

    &lt;logger name="com.anrisoftware.globalpom.exec.runcommands.RunCommands" level="DEBUG" additivity="false">
        &lt;appender-ref ref="RUNCOMMANDS-FILE"/>
    &lt;/logger>

&lt;/configuration>
</pre>

#[[##]]# Packages

![Packages Overview](images/packages.svg)

#[[#]]# Links

* [Generated Site](${project.url})
* [Download (Central)]($context.get("project.custom.central.url"))
* [Source code]($context.get("project.custom.scm.repo"))
* [Source code (Github)]($context.get("project.custom.scm.github"))
* [Project Home]($context.get("project.custom.home"))
* [Project Roadmap]($context.get("project.custom.home")/roadmap)
* [Project Issues]($context.get("project.custom.home")/issues)
* [Jenkins]($context.get("project.custom.jenkins.url"))
* [SonarQube]($context.get("project.custom.sonarqube.url"))

