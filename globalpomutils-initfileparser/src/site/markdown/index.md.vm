#*
 * Copyright ${project.custom.year} Erwin Müller <erwin.mueller@anrisoftware.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *#
[![Build Status]($context.get("globalpom.custom.jenkins.build.badge.master"))]($context.get("globalpom.custom.jenkins.build.link.master"))
[![Quality Gate]($context.get("globalpom.custom.sonarqube.qualitygate.badge"))]($context.get("globalpom.custom.sonarqube.qualitygate.link"))
[![Apache License, Version 2.0]($context.get("globalpom.custom.license.image.url"))](http://www.apache.org/licenses/LICENSE-2.0) © $context.get("globalpom.custom.year") $context.get("globalpom.custom.user.name")

#[[#]]# Description

${project.description}

Parses INI like files.

Loads and parses the Ini configuration files. An Ini configuration file
contains key-value pairs name=value and can be divided into sections.
A description of the format can be read at
the {{{http://en.wikipedia.org/wiki/INI_file}INI file}} Wikipedia page.

#[[##]]# Examples

<pre>
injector = Guice.createInjector(new InitFileParserModule());
parserFactory = injector.getInstance(InitFileParserFactory.class);
attributesFactory = injector.getInstance(DefaultInitFileAttributesFactory.class);

DefaultInitFileAttributes attributes = attributesFactory.create();
InitFileParser parser = parserFactory.create(inifile, attributes).call();
for (Section next : parser) {
    // the next section
}
</pre>

#[[##]]# Packages

![Packages Overview](images/packages.svg)

#[[#]]# Links

* [Generated Site](${project.url})
* [Download (Central)]($context.get("globalpom.custom.central.url"))
* [Source code]($context.get("globalpom.custom.scm.repo"))
* [Source code (Github)]($context.get("globalpom.custom.scm.github"))
* [Project Home]($context.get("globalpom.custom.home"))
* [Project Roadmap]($context.get("globalpom.custom.home")/roadmap)
* [Project Issues]($context.get("globalpom.custom.home")/issues)
* [Jenkins]($context.get("globalpom.custom.jenkins.url"))
* [SonarQube]($context.get("globalpom.custom.sonarqube.url"))

